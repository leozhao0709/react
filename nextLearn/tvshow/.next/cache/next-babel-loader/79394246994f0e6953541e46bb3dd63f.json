{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/leizhao/Documents/my_git/react/nextJsLearn/src/pages/[country]/[showId]/index.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from './index.module.scss';\nimport { useRouter } from 'next/router';\nimport parse from 'html-react-parser';\nimport Casts from '../../../components/casts';\n\nvar CountryDetail = function CountryDetail(props) {\n  var show = props.show;\n  var route = useRouter();\n\n  if (route.isFallback) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return __jsx(\"div\", {\n    className: styles.countryDetails,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.poster,\n    style: {\n      backgroundImage: \"url(\".concat(show.image.original, \")\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, show.name), parse(show.summary), show._embedded && show._embedded.cast.length > 0 && __jsx(Casts, {\n    casts: show._embedded.cast,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 60\n    }\n  }));\n};\n\nCountryDetail.defaultProps = {};\nexport var __N_SSG = true;\nexport default CountryDetail;","map":{"version":3,"sources":["/Users/leizhao/Documents/my_git/react/nextJsLearn/src/pages/[country]/[showId]/index.tsx"],"names":["styles","useRouter","parse","Casts","CountryDetail","props","show","route","isFallback","countryDetails","poster","backgroundImage","image","original","name","summary","_embedded","cast","length","defaultProps"],"mappings":";;;;;AAEA,OAAOA,MAAP,MAAmB,qBAAnB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAMA,IAAMC,aAA2C,GAAG,SAA9CA,aAA8C,CAACC,KAAD,EAA+B;AAAA,MACzEC,IADyE,GAChED,KADgE,CACzEC,IADyE;AAEjF,MAAMC,KAAK,GAAGN,SAAS,EAAvB;;AACA,MAAIM,KAAK,CAACC,UAAV,EAAsB;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAER,MAAM,CAACS,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAET,MAAM,CAACU,MAAvB;AAA+B,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,gBAASL,IAAI,CAACM,KAAL,CAAWC,QAApB;AAAjB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,IAAI,CAACQ,IAAV,CAFF,EAGGZ,KAAK,CAACI,IAAI,CAACS,OAAN,CAHR,EAIGT,IAAI,CAACU,SAAL,IAAkBV,IAAI,CAACU,SAAL,CAAeC,IAAf,CAAoBC,MAApB,GAA6B,CAA/C,IAAoD,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEZ,IAAI,CAACU,SAAL,CAAeC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJvD,CADF;AAQD,CAfD;;AAqCAb,aAAa,CAACe,YAAd,GAA6B,EAA7B;;AAEA,eAAef,aAAf","sourcesContent":["import React from 'react';\nimport { NextPage, GetStaticProps, GetStaticPaths } from 'next';\nimport styles from './index.module.scss';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport parse from 'html-react-parser';\nimport Casts from '../../../components/casts';\n\ninterface CountryDetailProps extends React.HTMLAttributes<HTMLDivElement> {\n  show: any;\n}\n\nconst CountryDetail: NextPage<CountryDetailProps> = (props: CountryDetailProps) => {\n  const { show } = props;\n  const route = useRouter();\n  if (route.isFallback) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className={styles.countryDetails}>\n      <div className={styles.poster} style={{ backgroundImage: `url(${show.image.original})` }}></div>\n      <h1>{show.name}</h1>\n      {parse(show.summary)}\n      {show._embedded && show._embedded.cast.length > 0 && <Casts casts={show._embedded.cast} />}\n    </div>\n  );\n};\n\nexport const getStaticProps: GetStaticProps = async ctx => {\n  const { params } = ctx;\n  const showId = params && params.showId;\n  const req = await axios.get(`http://api.tvmaze.com/shows/${showId}?embed=cast`);\n  const show = req.data;\n  return {\n    props: {\n      show\n    }\n  };\n};\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const paths = [{ params: { country: 'us', showId: '339141' } }];\n  return {\n    paths,\n    fallback: true\n  };\n};\n\nCountryDetail.defaultProps = {};\n\nexport default CountryDetail;\n"]},"metadata":{},"sourceType":"module"}